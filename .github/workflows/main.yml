name: Deploy to AWS S3

on:
  push:
    branches:
      - devtest
      - main

jobs:
  deploy:

    runs-on: ubuntu-latest # Specifies the operating system environment on which the workflow should run

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2 # Check out the source code or repository content to the runner machine, making it available for the subsequent steps in the workflow.

    - name: Set up Node.js
      uses: actions/setup-node@v3 # setup node environment on the runner machine
      with: # used to pass input parameters
        node-version: 14 # version of node to setup on runner machine

    - name: Install dependencies
      run: |
        npm install 

    - name: Build for QA environment
      run: npm run build

    # - name: Deploy to QA S3 bucket
    #   run: |
    #     aws s3 sync build/ s3://${{ secrets.QA_S3_BUCKET }}
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    # Deploy to S3
    # This is a third party action used to sync our production build app with the AWS S3 bucket
    # For security purpose I am using secrets configured in project repo setting.
    - name: Deploy to S3
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        # --acl public read => makes files publicly readable(i.e. makes sure that your bucket settings are also set to public)
        # --delete => permanently deletes files in S3 bucket that are not present in latest build
        args: --acl public-read --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.QA_S3_BUCKET }} # S3 bucket name
        # note: use IAM role with limited role for below access-key-id and secret-access-key
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # Access Key ID
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Access Secret Key
        SOURCE_DIR: "dist/" # build folder now

    # - name: Build for Production environment
    #   run: |
    #     REACT_APP_ENV=production npm run build
    #   env:
    #     REACT_APP_ENV: production

    # - name: Deploy to Production S3 bucket
    #   run: |
    #     aws s3 sync build/ s3://${{ secrets.PRODUCTION_S3_BUCKET }}
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
